demo()
demo(package = .packages(all.available = TRUE))
demo(Hershey)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
test <- read_csv("F:/Github/comp320-comp360-dissertation/Artifact/R Project/Data/test.csv",
col_types = cols(GameData__DeathLocation__Pos__X = col_skip(),
GameData__DeathLocation__Pos__Y = col_skip(),
GameData__GameScore = col_skip()))
View(test)
xValues <- test[2]
View(xValues)
yValues <- test[1]
df <- data.frame(xValues, yValues)
library(ggplot2)
library(lattice)
xyplot(xValues, yValues)
xyplot(df$xValues ~ df$yValues, type = "1")
View(df)
df$xValues <- as.Date(df$xValues)
plot(df$xValues, df$yValues, type = "l")
boxplot(xValues)
boxplot(xValues, yValues)
boxplot(xValues, yValues)
boxplot(yValues, xValues)
boxplot(df)
plot(df)
max(df, na.rm=TRUE)
View(df)
na.rm=TRUE
plot(df)
View(df)
plot(df, na.rm = TRUE)
plot(df, na.omit(df))
na.omit(df)
View(df)
max( na.omit(xValues) )
View(xValues)
library(readr)
result <- read_csv("F:/Github/comp320-comp360-dissertation/Artifact/R Project/Data/result.csv")
View(result)
Res <- data.frame(result[1], result[2])
plot(Res)
library(readr)
zelda <- read_csv("F:/Github/comp320-comp360-dissertation/Artefact/R Project/Data/zelda.csv")
View(zelda)
View(zelda)
plot(zelda[0], zelda[1])
data <- data.frame(zelda[0], zelda[1])
plot(data)
View(data)
data 2 <- data.frame(zelda[1], zelda[0])
data2 <- data.frame(zelda[1], zelda[0])
plot(data, data2)
View(data)
View(data2)
View(data)
data <- zelda
matplot(data[, 1], data[, -1], type="l")
plot(data[, 1], data[, -1], type="l")
matplot(zelda[1], zelda[2])
matplot(zelda[,1], zelda[,2], type = "2")
matplot(zelda[,1], zelda[,2], type = "1")
matplot(zelda[1], zelda[2], type = "1")
matplot(zelda[1], zelda[2], type="1")
matplot(zelda[1], zelda[2], type="l")
matplot(zelda[1], zelda[2], type="l")
help(matplot)
matplot(zelda[1], zelda[2], type="pl")
matplot(zelda[1], zelda[2], type="l")
matplot(zelda[1], zelda[2], type="p")
matplot(zelda[1], zelda[2], type="l")
matplot(zelda[1], zelda[2], type="h")
matplot(zelda[1], zelda[2], type="o")
heatmap
heatmap.2(data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap(data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap(data)
heatmap(data[1], data[2])
heatmap(df)
heatmap(zelda)
matZelda <- data.matrix(data)
View(matZelda)
heatmap(zelda)
heatmap(matZelda)
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
heatmap(matZelda, col=my_palette)
heatmap(matZelda)
example(persp3d)
example(persp3D)
example("persp")
persp(data)
persp(res)
persp(xValues)
persp(res)
persp(data[1], data[2])
persp(data[1])
persp(matZelda)
persp(matZelda, phi = 30, theta = -30)
data.matrix(data)
example(mesh)
example(Mesh)
example(mesh)
View(z)
View(zelda)
plot(data)
install.packages("rjson")
library("rjson")
json_data <- fromJSON(file=gameData.txt)
json_data <- fromJSON(file="E:\GitHub\comp320-comp360-dissertation\Artefact\R\Data\gameData.txt")
json_data <- fromJSON(file=E:\GitHub\comp320-comp360-dissertation\Artefact\R\Data\gameData.txt)
json_data <- fromJSON(file=gameData.txt)
json_data <- fromJSON(file=gameData)
jsonFile <- jsonData
jsonFile <- jsonData.txt
jsonFile <- gameData.txt
jsonFile <- gameData
jsonFile <- ./gameData
jsonFile <- /gameData
jsonFile <- gameData
jsonFile <- gameData
jsonFile <- gameData.json
JsonData <- fromJSON(file= "<gameData.json>" )
JsonData <- fromJSON(file= "<gameData.json>" )
library(rjson)
JsonData <- fromJSON(file="<gameData.json>")
JsonData <- fromJSON(file="<gameData>")
JsonData <- fromJSON(file="gameData.json")
colnames(PlayerPositions0)
colnames(PlayerPositions)
colnames(gameData)
view(JsonData)
jsonData[,0]
JsonData[,0]
JsonData[,1]
JsonData[0]
JsonData[1]
JsonData[2]
JsonData[3]
JsonData[4]
JsonData[5]
FirstGame <- JsonData[5]
view(FirstGame)
FirstGame[1]
FirstGame[2]
FirstGame[0]
FirstGame[1]
plot(FirstGame[1])
View(data2)
View(df)
View(xy)
library(readr)
result_3_ <- read_csv("F:/Github/comp320-comp360-dissertation/Artefact/R/Data/result (3).csv")
View(result_3_)
Saaply()
Sapply()
Summary(result_3_)
Summary(result_3_[1])
summary(df)
Describe(df)
describe(df)
sapply(df[1], function)
sapply(df[1], 1)
sapply(df[1], X)
View(result)
View(result_3_)
library(readr)
result_4_ <- read_csv("F:/Github/comp320-comp360-dissertation/Artefact/R/Data/result (4).csv")
View(result_4_)
plot(result_4_)
View(result_4_)
plot(x, y, type="n")
plot(_Score, type="n")
plot(Score, type="n")
plot($Score, type="n")
plot([0], type="n")
plot([0],[1], type="n")
plot(result_4_, type="n")
plot(result_4)
plot(result_4_)
plot(result_4_)
gameTick = 1,1000
gameTick = c(1,1000)
gameTick = c(1,,1000)
gameTick = 1:1000
library(readr)
Scores_1 <- read_csv("F:/Github/comp320-comp360-dissertation/Artefact/R/Data/Scores-1.csv")
View(Scores_1)
score = Scores_1
plot(score, gameTick)
plot(score)
print(score)
plot(gameTick, score)
gameTick2 = 0:129
plot(gameTick, score)
plot(score, gameTick2)
plot(gameTick2, score)
View(score)
score2 = score[1]
View(score2)
plot(gameTick2, score[1])
plot(score, type="1")
length(score)
length(score[1])
length(score[2])
length(score[0])
length(score[1])
length(gameTick)
df = data.frame(score[1])
df = data.frame($Score)
df = data.frame(score$Score)
View(df)
df = data.frame(score$Score, gameTick)
df = data.frame(score$Score, gameTick2)
gameTick2 = 0:130
df = data.frame(score$Score, gameTick2)
gameTick2 = 0:129
df = data.frame(score$Score, gameTick2)
gameTick2 = 0:128
df = data.frame(score$Score, gameTick2)
plot(df)
gameTick = 0:128
df = data.frame(score$Score, gameTick)
plot(df)
df = data.frame(gameTick, score$Score)
plot(df)
library(readr)
Scores_2 <- read_csv("F:/Github/comp320-comp360-dissertation/Artefact/R/Data/Scores-2.csv")
View(Scores_2)
game_Tick = 0:442
df = data.frame(gameTick, score2$Score)
plot(df#)
plot(df)
plot(df)
df2 = data.frame(gameTick, Scores_2$Score)
score3 = Scores_2[1]
df2 = data.frame(gameTick, score3)
df2 = data.frame(game_Tick, score3)
plot(df)
plot(df2)
library(readr)
breadthfirst <- read_csv("~/Documents/Github/comp320-comp360-dissertation/Artefact/R/Data/08-04/csv/breadthfirst.csv")
View(breadthfirst)
game1BFS <- data.frame(breadthfirst$`|__GameScore`, breadthfirst$`|__GameSpaceSearched`)
breadFirstData <- game1BFS
game1BFS <- head(breadFirstData, 10)
View(game1BFS)
plot(game1BFS)
library(readr)
flatMCTS <- read_csv("~/Documents/Github/comp320-comp360-dissertation/Artefact/R/Data/08-04/csv/flatMCTS.csv")
View(flatMCTS)
library(readr)
OLMCTS <- read_csv("~/Documents/Github/comp320-comp360-dissertation/Artefact/R/Data/08-04/csv/OLMCTS.csv")
View(OLMCTS)
library(readr)
random <- read_csv("~/Documents/Github/comp320-comp360-dissertation/Artefact/R/Data/08-04/csv/random.csv")
View(random)
library(readr)
sampleMCTS <- read_csv("~/Documents/Github/comp320-comp360-dissertation/Artefact/R/Data/08-04/csv/sampleMCTS.csv")
View(sampleMCTS)
test <- data.frame(breadthfirst$`|__GameScore`, sampleMCTS$`|__GameScore`, random$`|__GameScore`, OLMCTS$`|__GameScore`, flatMCTS$`|__GameScore`)
test <- data.frame(breadthfirst$`|__GameScore`, sampleMCTS$`|__GameScore`, random$`|__GameScore`, OLMCTS$`|__GameScore`)
test <- data.frame(, sampleMCTS$`|__GameScore`, random$`|__GameScore`, OLMCTS$`|__GameScore`)
test <- data.frame(sampleMCTS$`|__GameScore`, random$`|__GameScore`, OLMCTS$`|__GameScore`)
test <- data.frame(sampleMCTS$`|__GameScore`, random$`|__GameScore`)
test <- data.frame(sampleMCTS$`|__GameScore`, breadthfirst$`|__GameScore`)
test <- data.frame(sampleMCTS$`|__GameScore`, OLMCTS$`|__GameScore`)
plot(test)
test <- data.frame(sampleMCTS$`|__GameScore`, sampleMCTS$`|__GameSpaceSearched`)
plot(test)
head(test, 10)
barplot(mean(sampleMCTS$`|__GameScore`))
barplot(mean(sampleMCTS$`|__GameScore`), mean(breadthfirst$`|__GameScore`))
barplot(mean(sampleMCTS$`|__GameScore`), mean(breadthfirst$`|__GameScore`), 10)
barplot(mean(sampleMCTS)
barplot(sampleMCTS)
barplot(sampleMCTS$`|__GameScore`, sampleMCTS$`|__levelSize`)
barplot(sampleMCTS$`|__GameScore`, sampleMCTS$`|__GameSpaceSearched`)
barplot(sampleMCTS$`|__GameScore`, breadthfirst$`|__GameScore`)
barplot(sampleMCTS$`|__GameScore`, breadthfirst$`|__GameScore`, col = c("lightblue", "mistyrose",
"lightcyan", "lavender"))
barplot(sampleMCTS$`|__GameScore`, breadthfirst$`|__GameScore`, OLMCTS$`|__GameScore`, col = c("lightblue", "mistyrose", "lightcyan", "lavender"))
barplot(sampleMCTS$`|__GameScore`, breadthfirst$`|__GameScore`, OLMCTS$`|__TotalCellsVisisted`, col = c("lightblue", "mistyrose", "lightcyan", "lavender"))
barplot(sampleMCTS$`|__GameScore`, breadthfirst$`|__GameScore`, col = c("lightblue", "mistyrose",
"lightcyan", "lavender"))
barplot(breadthfirst, col = c("lightblue", "mistyrose", "lightcyan", "lavender"))
barplot(breadFirstData, col = c("lightblue", "mistyrose", "lightcyan", "lavender"))
barplot(breadFirstData$breadthfirst...__GameScore., col = c("lightblue", "mistyrose", "lightcyan", "lavender"))
View(game1BFS)
gameControllers <- c("BFS", "sampleMCTS", "random")
meanBFS <- mean(breadthfirst$`|__GameScore`)
meanMCTS <- mean(sampleMCTS$`|__GameScore`)
meanRandom <- mean(random$`|__GameScore`)
test <- data.frame(meanBFS, meanMCTSm meanRandom)
test <- data.frame(meanBFS, meanMCTS, meanRandom)
library(plotly)
library(plotly)
install.packages("library(plotly)")
install.packages("plotly")
library(plotly)
controllerBarPlot <- barplot(test, x = ~gameControllers, y = meanMCTS)
controllerBarPlot <- barplot(test)
gamesList <- ("Aliens")
gamesList <- ("Aliens", "Chase")
gamesList <- c("Aliens", "Chase")
barplot(test)
barplot(test, test)
barplot(breadthfirst)
barplot(matrix(breadthfirst)
)
barplot(matrix(OLMCTS)
)
library(readr)
game0 <- read_csv("GameData/BestFirstSearch/0/game0.csv")
View(game0)
view(game0)
view(game0)
library(readr)
BrFS <- read_csv("GameData/BreadthFirstSearch/game-0/BrFS.csv")
View(BrFS)
library(readr)
random_0 <- read_csv("GameData/Random/game0/random-0.csv")
View(random_0)
library(readr)
game0MCTS <- read_csv("GameData/SampleMCTS/game-0/game0MCTS.csv")
View(game0MCTS)
meanGameData0 <- data.frame(mean(random_0$`|__GameScore`), mean(game0MCTS$`|__GameScore`), mean(BrFS$`|__GameScore`))
barplot(meanGameData0)
View(meanGameData0)
game0Data=matrix(meanGameData0, nrow = 1)
View(game0Data)
barplot(game0Data)
game0Data=matrix(meanGameData0, nrow = 3)
barplot(game0Data)
View(game0Data)
barplot(game0Data)
game0Data=matrix(meanGameData0, nrow = 1)
barplot(game0Data)
colnames(game0Data) = c("random", "mcts", "breadth first search")
rownames(game0Data) = c("bait", "aliens", "chase")
game0Data=matrix(meanGameData0, nrow = 3)
rownames(game0Data) = c("bait", "aliens", "chase")
colnames(game0Data) = c("random", "mcts", "breadth first search")
barplot(game0Data, beside = T)
barplot(game0Data)
library(readr)
random_1 <- read_csv("GameData/Random/game1/random-1.csv")
View(random_1)
meanGameData0 <- data.frame(mean(random_0$`|__GameScore`)mean(random_1$`|__GameScore`), mean(game0MCTS$`|__GameScore`), mean(BrFS$`|__GameScore`))
meanGameData0 <- data.frame(mean(random_0$`|__GameScore`):mean(random_1$`|__GameScore`), mean(game0MCTS$`|__GameScore`), mean(BrFS$`|__GameScore`))
meanGameData0 <- data.frame(mean(random_0$`|__GameScore`):mean(random_1$`|__GameScore`), mean(game0MCTS$`|__GameScore`):mean(random_1$`|__GameScore`), mean(BrFS$`|__GameScore`):mean(random_1$`|__GameScore`))
game0Data=matrix(meanGameData0, nrow = 2)
View(meanGameData0)
library(readr)
BrFS_1 <- read_csv("GameData/BreadthFirstSearch/game1/BrFS-1.csv")
View(BrFS_1)
meanGameData0 <- data.frame(mean(random_0$`|__GameScore`):mean(random_1$`|__GameScore`), mean(game0MCTS$`|__GameScore`):mean(BrFS_1$`|__GameScore`), mean(BrFS$`|__GameScore`):mean(BrFS$`|__GameScore`))
game0Data=matrix(meanGameData0, nrow = 2)
game0Data=matrix(meanGameData0, nrow = 3)
barplot(game0Data)
View(game0Data)
game0Data[[2]]
game0Data[[1]]
game0Data[[3]]
barplot(game0Data)
game0Data=matrix(sample(meanGameData0), nrow = 2)
game0Data=matrix(sample(meanGameData0), nrow = 3)
View(game0Data)
View(test)
View(game0MCTS)
View(random_0)
View(random_1)
View(random_1)
