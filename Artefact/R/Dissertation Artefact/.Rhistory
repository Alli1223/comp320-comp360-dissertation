demo()
demo(package = .packages(all.available = TRUE))
demo(Hershey)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
test <- read_csv("F:/Github/comp320-comp360-dissertation/Artifact/R Project/Data/test.csv",
col_types = cols(GameData__DeathLocation__Pos__X = col_skip(),
GameData__DeathLocation__Pos__Y = col_skip(),
GameData__GameScore = col_skip()))
View(test)
xValues <- test[2]
View(xValues)
yValues <- test[1]
df <- data.frame(xValues, yValues)
library(ggplot2)
library(lattice)
xyplot(xValues, yValues)
xyplot(df$xValues ~ df$yValues, type = "1")
View(df)
df$xValues <- as.Date(df$xValues)
plot(df$xValues, df$yValues, type = "l")
boxplot(xValues)
boxplot(xValues, yValues)
boxplot(xValues, yValues)
boxplot(yValues, xValues)
boxplot(df)
plot(df)
max(df, na.rm=TRUE)
View(df)
na.rm=TRUE
plot(df)
View(df)
plot(df, na.rm = TRUE)
plot(df, na.omit(df))
na.omit(df)
View(df)
max( na.omit(xValues) )
View(xValues)
library(readr)
result <- read_csv("F:/Github/comp320-comp360-dissertation/Artifact/R Project/Data/result.csv")
View(result)
Res <- data.frame(result[1], result[2])
plot(Res)
library(readr)
zelda <- read_csv("F:/Github/comp320-comp360-dissertation/Artefact/R Project/Data/zelda.csv")
View(zelda)
View(zelda)
plot(zelda[0], zelda[1])
data <- data.frame(zelda[0], zelda[1])
plot(data)
View(data)
data 2 <- data.frame(zelda[1], zelda[0])
data2 <- data.frame(zelda[1], zelda[0])
plot(data, data2)
View(data)
View(data2)
View(data)
data <- zelda
matplot(data[, 1], data[, -1], type="l")
plot(data[, 1], data[, -1], type="l")
matplot(zelda[1], zelda[2])
matplot(zelda[,1], zelda[,2], type = "2")
matplot(zelda[,1], zelda[,2], type = "1")
matplot(zelda[1], zelda[2], type = "1")
matplot(zelda[1], zelda[2], type="1")
matplot(zelda[1], zelda[2], type="l")
matplot(zelda[1], zelda[2], type="l")
help(matplot)
matplot(zelda[1], zelda[2], type="pl")
matplot(zelda[1], zelda[2], type="l")
matplot(zelda[1], zelda[2], type="p")
matplot(zelda[1], zelda[2], type="l")
matplot(zelda[1], zelda[2], type="h")
matplot(zelda[1], zelda[2], type="o")
heatmap
heatmap.2(data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap(data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap(data)
heatmap(data[1], data[2])
heatmap(df)
heatmap(zelda)
matZelda <- data.matrix(data)
View(matZelda)
heatmap(zelda)
heatmap(matZelda)
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
heatmap(matZelda, col=my_palette)
heatmap(matZelda)
example(persp3d)
example(persp3D)
example("persp")
persp(data)
persp(res)
persp(xValues)
persp(res)
persp(data[1], data[2])
persp(data[1])
persp(matZelda)
persp(matZelda, phi = 30, theta = -30)
data.matrix(data)
example(mesh)
example(Mesh)
example(mesh)
View(z)
View(zelda)
plot(data)
